[{"D:\\Code\\react-assignment-reaktor\\src\\App.tsx":"1","D:\\Code\\react-assignment-reaktor\\src\\components\\Buttons\\Button\\Button.tsx":"2","D:\\Code\\react-assignment-reaktor\\src\\components\\Buttons\\Buttons.tsx":"3","D:\\Code\\react-assignment-reaktor\\src\\components\\Items\\Item\\Item.tsx":"4","D:\\Code\\react-assignment-reaktor\\src\\components\\Items\\Items.tsx":"5"},{"size":718,"mtime":1606346611107,"results":"6","hashOfConfig":"7"},{"size":439,"mtime":1606347451568,"results":"8","hashOfConfig":"7"},{"size":343,"mtime":1606347388020,"results":"9","hashOfConfig":"7"},{"size":711,"mtime":1606346137086,"results":"10","hashOfConfig":"7"},{"size":1075,"mtime":1606347679223,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"v5o0iz",{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"D:\\Code\\react-assignment-reaktor\\src\\App.tsx",["24","25"],"D:\\Code\\react-assignment-reaktor\\src\\components\\Buttons\\Button\\Button.tsx",["26","27"],"D:\\Code\\react-assignment-reaktor\\src\\components\\Buttons\\Buttons.tsx",["28","29"],"D:\\Code\\react-assignment-reaktor\\src\\components\\Items\\Item\\Item.tsx",["30","31"],"import React, {useState, useEffect} from 'react';\r\nimport './Item.css';\r\n\r\ntype ItemProps = {\r\n  id: string;\r\n  type: string;\r\n  name: string;\r\n  color: string[];\r\n  price: number;\r\n  manufacturer: string;\r\n}\r\n\r\nconst Item: React.FC<ItemProps> = ({id, type, name, color, price, manufacturer}) => {\r\n  let colors: any = [];\r\n  color.forEach((c: string) => colors.push(\r\n    <div style={{\r\n      height: '13px', width: '13px', backgroundColor: c, display: 'inline-block', marginBottom: '-1.6px'\r\n    }}></div>\r\n  ))\r\n  \r\n  return (\r\n    <div className=\"Item\">\r\n      <p>Name: {name + \" - \" + id}</p>\r\n      <p>Color: {colors}</p>\r\n      <p>Price: {price + \"â‚¬\"}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Item;\r\n","D:\\Code\\react-assignment-reaktor\\src\\components\\Items\\Items.tsx",["32","33"],"import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport Item from './Item/Item';\r\nimport './Items.css';\r\n\r\ntype ItemsProps = {\r\n  location?: any;\r\n}\r\n\r\nconst Items: React.FC<ItemsProps> = (props) => {\r\n  const [items, setItems] = useState({} as any);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchValue, setSearchValue] = useState(props.location.search.replace('?category=', ''));\r\n\r\n  useEffect(() => {\r\n    setSearchValue(props.location.search.replace('?category=', ''));\r\n    setLoading(true);\r\n    axios\r\n      .get(`https://bad-api-assignment.reaktor.com/products/${searchValue}`)\r\n      .then((response) => setItems(response.data))\r\n      .then(() => setLoading(false))\r\n    }, [searchValue]\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading ? (<p>It's loading...</p>) : (\r\n        <div className=\"Items\">\r\n          {items.map((item: any) => (<Item key={item.id} {...item}  />))}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Items;\r\n",{"ruleId":"34","severity":1,"message":"35","line":1,"column":16,"nodeType":"36","messageId":"37","endLine":1,"endColumn":24},{"ruleId":"34","severity":1,"message":"38","line":1,"column":26,"nodeType":"36","messageId":"37","endLine":1,"endColumn":35},{"ruleId":"34","severity":1,"message":"35","line":1,"column":16,"nodeType":"36","messageId":"37","endLine":1,"endColumn":24},{"ruleId":"34","severity":1,"message":"38","line":1,"column":26,"nodeType":"36","messageId":"37","endLine":1,"endColumn":35},{"ruleId":"34","severity":1,"message":"35","line":1,"column":16,"nodeType":"36","messageId":"37","endLine":1,"endColumn":24},{"ruleId":"34","severity":1,"message":"38","line":1,"column":26,"nodeType":"36","messageId":"37","endLine":1,"endColumn":35},{"ruleId":"34","severity":1,"message":"35","line":1,"column":16,"nodeType":"36","messageId":"37","endLine":1,"endColumn":24},{"ruleId":"34","severity":1,"message":"38","line":1,"column":26,"nodeType":"36","messageId":"37","endLine":1,"endColumn":35},{"ruleId":"34","severity":1,"message":"39","line":3,"column":10,"nodeType":"36","messageId":"37","endLine":3,"endColumn":19},{"ruleId":"40","severity":1,"message":"41","line":23,"column":8,"nodeType":"42","endLine":23,"endColumn":21,"suggestions":"43"},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useParams' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location.search'. Either include it or remove the dependency array. If 'setSearchValue' needs the current value of 'props.location.search', you can also switch to useReducer instead of useState and read 'props.location.search' in the reducer.","ArrayExpression",["44"],{"desc":"45","fix":"46"},"Update the dependencies array to be: [props.location.search, searchValue]",{"range":"47","text":"48"},[780,793],"[props.location.search, searchValue]"]